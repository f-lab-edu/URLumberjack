# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Auto deploy to NCP

#main branch가 push될 때마다 동작
on:
  push:
    branches: [ "main" ]
permissions:
  contents: read

#아래의 action을 수행할 runner의 os는 최신버전 ubuntu
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true  # CI 환경을 활성화하여 더 많은 로그 출력
    steps:
    #소스코드(repo)를runner로 옮김. 서브모듈을 사용하므로 서브모듈 옵션도 추가
    - name: checkout
      uses: actions/checkout@v4.1.1
      with:
        submodules: true
        token: ${{ secrets.ACTION_TOKEN }}

    #yml 확인 1
    - name: Check files
      run: |
        ls -l
        
    #명시한 환경으로 setup
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    # gradle setup & build
    # - name: grant execute permission for gradlew
    #   run: |
    #     gradle wrapper
    #     chmod +x gradlew
        
    # - name: gradle build
    #   run: ./gradlew clean build

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v3.1.0 # 버전 선택
      with:
        arguments: build

    #yml 확인 1
    - name: Check copied files 
      run: |
        ls -l src/main/resources/*.yml
        
        
    #빌드한 jar파일을 도커 이미지로 빌드하고 도커 허브에 푸시
    - name: web docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/urlumberjack .
        docker push ${{ secrets.DOCKER_REPO }}/urlumberjack
        
  deploy:
    #needs를 통해 build job이 수행 성공시에 작업되도록 설정
    needs: build
    runs-on: ubuntu-latest

    steps:
    #NCP에 로그인해 docker image pull & run : https://github.com/appleboy/ssh-action
    - name : NCP login and docker image pull and run
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.NCP_HOST }}
        username: ${{ secrets.NCP_USERNAME }}
        password: ${{ secrets.NCP_PASSWORD }}
        port: ${{ secrets.NCP_PORT }}
        script: |
          sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          sudo docker stop $(sudo docker ps -a -q)
          sudo docker rm -f $(sudo docker ps -a -q)
          sudo docker pull ${{ secrets.DOCKER_REPO }}/urlumberjack
          sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_REPO }}/urlumberjack
          sudo docker image prune -f
          ps -ef | grep java
          
